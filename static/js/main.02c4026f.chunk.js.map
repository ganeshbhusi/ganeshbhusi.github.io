{"version":3,"sources":["components/Header.js","components/rightPanel.js","App.js","components/leftPanel.js","App2.js","index.js"],"names":["Header","useState","showRespMenu","setShowRespMenu","className","onClick","console","log","type","placeholder","href","style","marginLeft","height","viewBox","version","width","aria-hidden","fillRule","d","paddingLeft","src","alt","RightPanel","Component","props","state","repos","languages","search","searchType","searchLanguage","showDiv1","showDiv2","fetch","then","response","json","setState","res","map","item","language","filter","idx","arr","indexOf","catch","err","error","event","this","includes","target","value","substr","values","filteredRepos","name","toLowerCase","filteredReposType","length","fork","has_issues","archived","mirror_url","onChange","searchRepo","bind","e","left","clientX","top","clientY","div","document","getElementsByClassName","id","searchRepo1","clearSearch","key","html_url","description","fontSize","license","stargazers_count","watchers_count","Intl","DateTimeFormat","month","day","year","format","Date","updated_at","LeftPanel","profile","fullname","profile_name","profile_image","bio","company","location","email","public_repos","public_gists","followers","following","onscroll","window","innerHeight","scrollY","display","avatar_url","login","textAlign","fill","borderBottomColor","fontWeight","color","App2","marginTop","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.02c4026f.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport '../styles/headerstyles.css'\n\nconst Header=()=> {\n    const [showRespMenu, setShowRespMenu] = useState(false)\n\n    return (\n        <div className=\"mainheader\">\n            <div className=\"responsiveDiv\" onClick={()=>{\n                console.log(\"hiii\");\n                    setShowRespMenu(!showRespMenu)\n                }}>\n                <span className=\"menuToggle\">\n                    &#9776;\n                </span>\n                {\n                        showRespMenu && (\n                            <div className=\"menuDivision\">\n                        <input type=\"text\" className=\"inputOne2\" placeholder=\"Search or jump to...\" />\n                        <hr/>\n                        <a href=\"https://www.google.com\" className=\"linksHeader\">Pull requests</a>\n                        <hr/>\n                        <a href=\"https://www.google.com\" className=\"linksHeader\">Issues</a>\n                        <hr/>\n                        <a href=\"https://www.google.com\" className=\"linksHeader\">Marketplace</a>\n                        <hr />\n                        <a href=\"https://www.google.com\" className=\"linksHeader\">Explore</a>\n                        <hr />\n                        <i></i>\n                    </div>\n                        )\n                    }\n            </div>\n            <div className=\"iconDiv\">\n                <svg style={{ marginLeft: \"20px\" }} className=\"octicon octicon-mark-github v-align-middle\" height=\"32\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"32\" aria-hidden=\"true\"><path fillRule=\"evenodd\" d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\"></path></svg>\n            </div>\n            <span className=\"notificationIconResp\">\n            <a href=\"https://github.com/notifications\">\n                    <svg className=\"octicon octicon-bell\" viewBox=\"0 0 14 16\" version=\"1.1\" width=\"14\" height=\"16\" aria-hidden=\"true\"><path fillRule=\"evenodd\" d=\"M14 12v1H0v-1l.73-.58c.77-.77.81-2.55 1.19-4.42C2.69 3.23 6 2 6 2c0-.55.45-1 1-1s1 .45 1 1c0 0 3.39 1.23 4.16 5 .38 1.88.42 3.66 1.19 4.42l.66.58H14zm-7 4c1.11 0 2-.89 2-2H5c0 1.11.89 2 2 2z\"></path></svg>\n                </a>\n            </span>\n            <input type=\"text\" className=\"inputOne\" placeholder=\"Search or jump to...\" />\n            <div className=\"navigationNames\">\n                <a href=\"https://www.google.com\" className=\"linksHeader\">Pull requests</a>\n                <a href=\"https://www.google.com\" className=\"linksHeader\">Issues</a>\n                <a href=\"https://www.google.com\" className=\"linksHeader\">Marketplace</a>\n                <a href=\"https://www.google.com\" className=\"linksHeader\">Explore</a>\n            </div>\n\n            <div className=\"rightNavigation\">\n                <a href=\"https://github.com/notifications\">\n                    <svg className=\"octicon octicon-bell\" viewBox=\"0 0 14 16\" version=\"1.1\" width=\"14\" height=\"16\" aria-hidden=\"true\"><path fillRule=\"evenodd\" d=\"M14 12v1H0v-1l.73-.58c.77-.77.81-2.55 1.19-4.42C2.69 3.23 6 2 6 2c0-.55.45-1 1-1s1 .45 1 1c0 0 3.39 1.23 4.16 5 .38 1.88.42 3.66 1.19 4.42l.66.58H14zm-7 4c1.11 0 2-.89 2-2H5c0 1.11.89 2 2 2z\"></path></svg>\n                </a>\n                <div className=\"tooltip\">\n                    <svg style={{ paddingLeft: 10 }} className=\"octicon octicon-plus\" version=\"1.1\" width=\"12\" height=\"16\" aria-hidden=\"true\">\n                        <path fillRule=\"evenodd\" d=\"M12 9H7v5H5V9H0V7h5V2h2v5h5v2z\"></path>\n                    </svg>\n                    <div className=\"bottom\">\n                        <a href=\"https://github.com\" className=\"href_two\">New Repository</a><br />\n                        <a href=\"https://github.com\" className=\"href_two\">Import Repository</a><br />\n                        <a href=\"https://github.com\" className=\"href_two\">New Gist</a><br />\n                        <a href=\"https://github.com\" className=\"href_two\">New organization</a><br />\n                        <a href=\"https://github.com\" className=\"href_two\">New project</a><br />\n                        <i></i>\n                    </div>\n                    <span> &#x25bc;</span>\n                </div>\n                <img className=\"image_and_caret\" src=\"https://avatars3.githubusercontent.com/u/33048355?s=40&v=4\" alt=\"img\" /> <span>&#x25bc;</span>\n            </div>\n        </div>\n    )\n}\n\nexport default Header\n","import React, { Component } from 'react';\nimport '../styles/rightpane.css'\n\nclass RightPanel extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            repos: [],\n            languages: [],\n            type: [\"All\", \"Sources\", \"Forks\", \"Archived\", \"Mirrors\"],\n            search: '',\n            searchType: '',\n            searchLanguage: '',\n            showDiv1: false,\n            showDiv2: false\n        }\n    }\n\n    componentDidMount() {\n\n        fetch('https://api.github.com/users/supreetsingh247/repos')\n            .then(response => response.json())\n            .then(response => this.setState({ repos: response }))\n            .then(res =>\n                this.setState({ languages: this.state.repos.map(item => item.language).filter((item, idx, arr) => arr.indexOf(item) == idx && arr.indexOf(item) != \"\") })\n            )\n            .catch(err => console.error(err))\n    }\n\n    searchRepo(event) {\n        /*If type array contains type string*/\n        if (this.state.type.includes(event.target.value)) {\n            this.setState({ searchType: event.target.value.substr(0) });\n        }\n        /*If languages array contains language string*/\n        else if (this.state.languages.includes(event.target.value)) {\n            this.setState({ searchLanguage: event.target.value.substr(0) });\n        }\n        /*If data contains project name*/\n        else {\n            this.setState({ search: event.target.value.substr(0) });\n        }\n    }\n\n    searchRepo1(values) {\n        /*If type array contains type string*/\n        if (this.state.type.includes(values)) {\n            this.setState({ searchType: values.substr(0) });\n        }\n        /*If languages array contains language string*/\n        else if (this.state.languages.includes(values)) {\n            this.setState({ searchLanguage: values.substr(0) });\n        }\n        /*If data contains project name*/\n        else {\n            this.setState({ search: values.substr(0) });\n        }\n\n        this.setState({showDiv1: false, showDiv2: false})\n    }\n\n\n    clearSearch(event) {\n        this.setState({ search: \"\", searchType: \"All\", searchLanguage: \"All\" });\n    }\n\n    render() {\n        /*Normal Search filtering using project name*/\n        let filteredRepos = this.state.repos.filter(\n            (item) => {\n                return item.name.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1;\n            });\n        /*Search filtering using Type and Language along with project name*/\n        let filteredReposType = this.state.repos.filter(\n            (item) => {\n                /*If Language is selected*/\n                if (this.state.searchLanguage.length > 0) {\n                    if (this.state.searchType === \"All\" && item.name.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1 && item.language === this.state.searchLanguage) {\n                        return filteredRepos;\n                    }\n                    if (this.state.searchType === \"Forks\" && item.name.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1 && item.language === this.state.searchLanguage) {\n                        return item.fork === true;\n                    }\n                    if (this.state.searchType === \"Sources\" && item.name.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1 && item.language === this.state.searchLanguage) {\n                        return item.has_issues === true;\n                    }\n                    if (this.state.searchType === \"Archived\" && item.name.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1 && item.language === this.state.searchLanguage) {\n                        return item.archived === true;\n                    }\n                    if (this.state.searchType === \"Mirrors\" && item.name.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1 && item.language === this.state.searchLanguage) {\n                        return item.mirror_url !== null;\n                    }\n                    if (item.name.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1 && item.language === this.state.searchLanguage) {\n                        return filteredRepos;\n                    }\n                } else { /*Except language remaining selected*/\n                    console.log(\"Type\");\n                    if (this.state.searchType === \"Forks\" && item.name.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1) {\n                        return item.fork === true;\n                    }\n                    if (this.state.searchType === \"All\" && item.name.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1) {\n                        return filteredRepos;\n                    }\n                    if (this.state.searchType === \"Sources\" && item.name.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1) {\n                        return item.has_issues === true;\n                    }\n                    if (this.state.searchType === \"Archived\" && item.name.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1) {\n                        return item.archived === true;\n                    }\n                    if (this.state.searchType === \"Mirrors\" && item.name.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1) {\n                        return item.mirror_url !== null;\n                    }\n                }\n            });\n        return (\n            <div>\n                <div>\n                    <div className=\"searchPanel\">\n                        <input type=\"text\"\n                            value={this.state.search}\n                            onChange={this.searchRepo.bind(this)}\n                            placeholder=\"Find a repository...\"\n                            className=\"search-input\" />\n                        <button className=\"search-type1\" onClick={(e) => {\n                            this.setState({ showDiv1: !this.state.showDiv1, showDiv2: false })\n                            var left = e.clientX + \"px\";\n                            var top = e.clientY + 30 + \"px\";\n\n                            var div = document.getElementsByClassName(\"search-type1-div\")[0];\n                            if (div) {\n                                div.style.left = left;\n                                div.style.top = top;\n                            }\n                            return false;\n\n                        }}>Type: <b>{this.state.searchType || 'All'}</b></button>\n                        {\n                            this.state.showDiv1 && (\n                                <div className=\"search-type1-div\">\n                                    <ul id=\"dropdown1\">\n                                        <li className=\"activeButton\">Select type</li>\n                                        <li onClick={()=>this.searchRepo1(\"All\")}>All</li>\n                                        <li onClick={()=>this.searchRepo1(\"Sources\")}>Sources</li>\n                                        <li onClick={()=>this.searchRepo1(\"Forks\")}>Forks</li>\n                                        <li onClick={()=>this.searchRepo1(\"Archived\")}>Archived</li>\n                                        <li onClick={()=>this.searchRepo1(\"Mirrors\")}>Mirrors</li>\n                                    </ul>\n                                </div>\n                            )\n                        }\n\n                    <button className=\"search-type1\" onClick={(e) => {\n                            this.setState({ showDiv2: !this.state.showDiv2, showDiv1: false })\n                            var left = e.clientX + \"px\";\n                            var top = e.clientY + 30 + \"px\";\n\n                            var div = document.getElementsByClassName(\"search-type2-div\")[0];\n                            if (div) {\n                                div.style.left = left;\n                                div.style.top = top;\n                            }\n                            return false;\n\n                        }}>Language: <b>{this.state.searchLanguage || 'All'}</b></button>\n                        {\n                            this.state.showDiv2 && (\n                                <div className=\"search-type2-div\">\n                                    <ul id=\"dropdown1\">\n                                        <li className=\"activeButton\">Select Language</li>\n                                        <li onClick={()=>this.searchRepo1(\"All\")}>All</li>\n                                        {\n                                            this.state.languages.map(language=>(\n                                                <li onClick={()=>this.searchRepo1(language)}>{language}</li>\n                                            ))\n                                        }\n                                    </ul>\n                                </div>\n                            )\n                        }\n\n                        {/*<select className=\"search-type\"\n                            value={this.state.searchType}\n                            onChange={this.searchRepo.bind(this)}>\n                            <option hidden>Type: All</option>\n                            {this.state.type.map(item => (\n                                <option value={item}>{item}</option>\n                            ))}\n                            </select> */}\n\n                        {/*<select className=\"search-language\"\n                            value={this.state.searchLanguage}\n                            onChange={this.searchRepo.bind(this)}>\n                            <option hidden>Language: All</option>\n                            {this.state.languages.map(item => (\n                                <option value={item}>{item}</option>\n                            ))}\n                            </select>*/}\n                    </div>\n\n                    <div className=\"resultPanel\">\n                        {/*Only for search input*/}\n                        {this.state.search.length > 0 && !this.state.searchType.length > 0 && !this.state.searchLanguage.length > 0 &&\n                            <li className=\"searchResults\"><b>{filteredRepos.length}</b> results for repositories matching <b> {this.state.search} </b>\n                                <button className=\"clearFilter\" onClick={this.clearSearch.bind(this)}>&#9746; Clear filter</button> </li>\n                        }\n\n                        {/*Full Search*/}\n                        {this.state.search.length > 0 && this.state.searchType.length > 0 && this.state.searchLanguage.length > 0 &&\n                            <li className=\"searchResults\"><b>{filteredReposType.length}</b> results for <b> {this.state.searchType} </b> repositories matching\n        <b> {this.state.search} </b> written in\n        <b> {this.state.searchLanguage} </b>\n                                <button className=\"clearFilter\" onClick={this.clearSearch.bind(this)}>&#9746; Clear filter</button></li>\n                        }\n\n                        {/*Search Results with search type and language*/}\n                        {this.state.searchType.length > 0 && this.state.searchLanguage.length > 0 && filteredReposType.map(item => (\n                            <li className=\"search-list\" key={item.id}>\n                                <p><a href={item.html_url} target=\"_blank\">{item.name}</a></p>\n\n                                {\n                                    item.description && (\n                                        <small style={{ fontSize: 14 }}>\n                                            {item.description}\n                                            <br />\n                                        </small>\n                                    )\n                                }\n                                <p>\n                                    {item.language && (<small className=\"repos-lang\"><span className=\"showBall\"></span> {item.language}</small>)}\n                                    {item.license && (\n                                        <small>{item.license.name}</small>\n                                    )}\n                                    {\n                                        item.stargazers_count > 0 && (\n                                            <small>&#x2605; {item.stargazers_count}</small>\n                                        )\n                                    }\n\n                                    {\n                                        item.watchers_count > 0 && (\n                                            <small>&#9739; {item.watchers_count}</small>\n                                        )\n                                    }\n                                    <small>Updated on {new Intl.DateTimeFormat('en-GB', {\n                                        month: 'short',\n                                        day: '2-digit',\n                                        year: 'numeric',\n                                    }).format(new Date(item.updated_at))}</small>\n                                </p>\n                            </li>\n                        ))}\n\n                        {/*Search Results with only search type*/}\n                        {this.state.searchType.length > 0 && !this.state.searchLanguage.length > 0 && filteredReposType.map(item => (\n                            <li className=\"search-list\" key={item.id}>\n                                <p><a href={item.html_url} target=\"_blank\">{item.name}</a></p>\n\n                                {\n                                    item.description && (\n                                        <small style={{ fontSize: 14 }}>\n                                            {item.description}\n                                            <br />\n                                        </small>\n                                    )\n                                }\n                                <p>\n                                    {item.language && (<small className=\"repos-lang\"><span className=\"showBall\"></span> {item.language}</small>)}\n                                    {item.license && (\n                                        <small>{item.license.name}</small>\n                                    )}\n                                    {\n                                        item.stargazers_count > 0 && (\n                                            <small>&#x2605; {item.stargazers_count}</small>\n                                        )\n                                    }\n\n                                    {\n                                        item.watchers_count > 0 && (\n                                            <small>&#9739; {item.watchers_count}</small>\n                                        )\n                                    }\n                                    <small>Updated on {new Intl.DateTimeFormat('en-GB', {\n                                        month: 'short',\n                                        day: '2-digit',\n                                        year: 'numeric',\n                                    }).format(new Date(item.updated_at))}</small>\n                                </p>\n                            </li>\n                        ))}\n\n                        {/*Search Results with only search language*/}\n                        {!this.state.searchType.length > 0 && this.state.searchLanguage.length > 0 && filteredReposType.map(item => (\n                            <li className=\"search-list\" key={item.id}>\n                                <p><a href={item.html_url} target=\"_blank\">{item.name}</a></p>\n\n                                {\n                                    item.description && (\n                                        <small style={{ fontSize: 14 }}>\n                                            {item.description}\n                                            <br />\n                                        </small>\n                                    )\n                                }\n                                <p>\n                                    {item.language && (<small className=\"repos-lang\"><span className=\"showBall\"></span> {item.language}</small>)}\n                                    {item.license && (\n                                        <small>{item.license.name}</small>\n                                    )}\n                                    {\n                                        item.stargazers_count > 0 && (\n                                            <small>&#x2605; {item.stargazers_count}</small>\n                                        )\n                                    }\n\n                                    {\n                                        item.watchers_count > 0 && (\n                                            <small>&#9739; {item.watchers_count}</small>\n                                        )\n                                    }\n                                    <small>Updated on {new Intl.DateTimeFormat('en-GB', {\n                                        month: 'short',\n                                        day: '2-digit',\n                                        year: 'numeric',\n                                    }).format(new Date(item.updated_at))}</small>\n                                </p>\n                            </li>\n                        ))}\n\n                        {/*Search Results with only search input*/}\n                        {!this.state.searchType.length > 0 && !this.state.searchLanguage.length > 0 && filteredRepos.map(item => (\n                            <li className=\"search-list\" key={item.id}>\n                                <p><a href={item.html_url} target=\"_blank\">{item.name}</a></p>\n\n                                {\n                                    item.description && (\n                                        <small style={{ fontSize: 14 }}>\n                                            {item.description}\n                                            <br />\n                                        </small>\n                                    )\n                                }\n                                <p>\n                                    {item.language && (<small className=\"repos-lang\"><span className=\"showBall\"></span> {item.language}</small>)}\n                                    {item.license && (\n                                        <small>{item.license.name}</small>\n                                    )}\n                                    {\n                                        item.stargazers_count > 0 && (\n                                            <small>&#x2605; {item.stargazers_count}</small>\n                                        )\n                                    }\n\n                                    {\n                                        item.watchers_count > 0 && (\n                                            <small>&#9739; {item.watchers_count}</small>\n                                        )\n                                    }\n                                    <small>Updated on {new Intl.DateTimeFormat('en-GB', {\n                                        month: 'short',\n                                        day: '2-digit',\n                                        year: 'numeric',\n                                    }).format(new Date(item.updated_at))}</small>\n                                </p>\n                            </li>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default RightPanel;\n","import React, {Component} from 'react';\nimport Header from './components/Header';\n\nclass App extends Component {\n  state = {\n    profile:'',\n    fullname:'',\n    profile_name:'',\n    bio:'',\n    company:'',\n    location:'',\n    repos: [],\n    languages:[],\n    type:[\"All\",\"Sources\",\"Forks\",\"Archived\",\"Mirrors\"],\n    search:'',\n    searchType:'',\n    searchLanguage:''\n  };\n  componentDidMount(){\n    this.getProfile();\n    this.getRepos();\n  }\n  /*Getting profile data*/\n  getProfile(){\n    fetch('https://api.github.com/users/supreetsingh247')\n      .then(response => response.json())\n      .then(response => this.setState({\n        profile: response.avatar_url,\n        fullname: response.name,\n        profile_name: response.login,\n        bio: response.bio,\n        company: response.company,\n        location: response.location}))\n      .catch(err=>console.error(err))\n  }\n  /*Getting Repositories data and filtering languages*/\n  getRepos(){\n    fetch('https://api.github.com/users/supreetsingh247/repos')\n      .then(response => response.json())\n      .then(response => this.setState({repos: response}))\n      .then(res=>\n        this.setState({languages: this.state.repos.map(item=>item.language).filter((item,idx,arr)=> arr.indexOf(item)==idx && arr.indexOf(item)!=\"\")})\n        )\n      .catch(err=>console.error(err))\n  }\n\n  /*Searching function for all the type of searches*/\n  searchRepo(event){\n    /*If type array contains type string*/\n    if(this.state.type.includes(event.target.value))\n    {\n    this.setState({searchType: event.target.value.substr(0)});\n    }\n    /*If languages array contains language string*/\n    else if(this.state.languages.includes(event.target.value))\n    {\n    this.setState({searchLanguage: event.target.value.substr(0)});\n    }\n    /*If data contains project name*/\n    else{\n      this.setState({search: event.target.value.substr(0)});\n    }\n  }\n\n  /*To clear the search*/\n  clearSearch(event){\n    this.setState({search:\"\",searchType:\"\",searchLanguage:\"\"});\n  }\n  \n\n  render(){\n    const {profile, fullname, profile_name,bio, company, location} = this.state;\n\n    /*Normal Search filtering using project name*/\n    let filteredRepos = this.state.repos.filter(\n      (item)=>{\n        return item.name.toLowerCase().indexOf(this.state.search.toLowerCase())!==-1;\n      });\n    /*Search filtering using Type and Language along with project name*/\n    let filteredReposType = this.state.repos.filter(\n      (item)=>{\n        /*If Language is selected*/\n        if(this.state.searchLanguage.length>0){\n          if(this.state.searchType===\"All\" && item.name.toLowerCase().indexOf(this.state.search.toLowerCase())!==-1 && item.language===this.state.searchLanguage) {\n            return filteredRepos;\n          }\n          if(this.state.searchType===\"Forks\" && item.name.toLowerCase().indexOf(this.state.search.toLowerCase())!==-1 && item.language===this.state.searchLanguage){\n            return item.fork===true;\n          }\n          if(this.state.searchType===\"Sources\" && item.name.toLowerCase().indexOf(this.state.search.toLowerCase())!==-1 && item.language===this.state.searchLanguage){\n            return item.has_issues===true;\n          }\n          if(this.state.searchType===\"Archived\" && item.name.toLowerCase().indexOf(this.state.search.toLowerCase())!==-1 && item.language===this.state.searchLanguage){\n            return item.archived===true;\n          }\n          if(this.state.searchType===\"Mirrors\" && item.name.toLowerCase().indexOf(this.state.search.toLowerCase())!==-1 && item.language===this.state.searchLanguage){\n            return item.mirror_url!==null;\n          }\n          if(item.name.toLowerCase().indexOf(this.state.search.toLowerCase())!==-1 && item.language===this.state.searchLanguage) {\n            return filteredRepos;\n          }\n        } else{ /*Except language remaining selected*/\n          console.log(\"Type\");\n          if(this.state.searchType===\"Forks\" && item.name.toLowerCase().indexOf(this.state.search.toLowerCase())!==-1){\n            return item.fork===true;\n          }\n          if(this.state.searchType===\"All\" && item.name.toLowerCase().indexOf(this.state.search.toLowerCase())!==-1){\n            return filteredRepos;\n          }\n          if(this.state.searchType===\"Sources\" && item.name.toLowerCase().indexOf(this.state.search.toLowerCase())!==-1){\n            return item.has_issues===true;\n          }\n          if(this.state.searchType===\"Archived\" && item.name.toLowerCase().indexOf(this.state.search.toLowerCase())!==-1){\n            return item.archived===true;\n          }\n          if(this.state.searchType===\"Mirrors\" && item.name.toLowerCase().indexOf(this.state.search.toLowerCase())!==-1){\n            return item.mirror_url!==null;\n          }\n        }\n      });\n\n  return (\n    <div className=\"App\">\n\n      <Header />\n\n      <div className=\"leftPanel\">\n        <img src={profile} className=\"profile-pic\"/>\n        <br/>\n        <h1 className=\"fullname\">{fullname}<br/>\n          <span className=\"profile-name\">{profile_name}</span>\n        </h1>\n        <small className=\"bio\">{bio}</small>\n        <br/><br/>\n        <button className=\"edit-btn\">Edit bio</button>\n        <br/>\n        <small className=\"company\">{company}</small><br/>\n        <small className=\"location\">{location}</small><br/>\n        <small className=\"email\"><a href=\"mailto:supreetsingh.247@gmail.com\">supreetsingh.247@gmail.com</a></small>\n      </div>\n\n      <div className=\"rightPanel\">\n        <ul className=\"tabs\">\n          <li><a href=\"#\">Overview</a></li>\n          <li><a href=\"#\" className=\"active\">Repositories\n          <span className=\"reposCount\">{this.state.repos.length}</span></a></li>\n          <li><a href=\"#\">Stars</a></li>\n          <li><a href=\"#\">Followers</a></li>\n          <li><a href=\"#\">Following</a></li>\n        </ul>\n        <div className=\"searchPanel\">\n        <input type=\"text\" \n          value={this.state.search}\n          onChange={this.searchRepo.bind(this)}\n          placeholder=\"Find a repository...\" \n          className=\"search-input\"/>\n        <select className=\"search-type\"\n          value={this.state.searchType}\n          onChange={this.searchRepo.bind(this)}>\n          <option hidden>Type: All</option>\n          {this.state.type.map(item=>(\n          <option value={item}>{item}</option>\n          ))}\n        </select>\n        <select className=\"search-language\"\n          value={this.state.searchLanguage}\n          onChange={this.searchRepo.bind(this)}>\n          <option hidden>Language: All</option>\n          {this.state.languages.map(item=>(\n          <option value={item}>{item}</option>\n          ))}\n        </select>\n        <button className=\"newbtn\">New</button>\n      </div>\n\n      <div className=\"resultPanel\">\n      {/*Only for search input*/}\n      {this.state.search.length>0 && !this.state.searchType.length>0 && !this.state.searchLanguage.length>0 && \n        <li className=\"searchResults\"><b>{filteredRepos.length}</b> results for repositories matching <b> {this.state.search} </b>\n        <button className=\"clearFilter\" onClick={this.clearSearch.bind(this)}>X Clear Filter</button> </li>\n        }\n      {/*Only for searchtype*/}\n      {!this.state.search.length>0 && this.state.searchType.length>0 && !this.state.searchLanguage.length>0 && \n        <li className=\"searchResults\"><b>{filteredReposType.length}</b> results for <b> {this.state.searchType} </b> repositories\n        <button className=\"clearFilter\" onClick={this.clearSearch.bind(this)}>X Clear Filter</button></li>\n        }\n      {/*Only for searchLanguage*/}\n      {!this.state.search.length>0 && !this.state.searchType.length>0 && this.state.searchLanguage.length>0 && \n        <li className=\"searchResults\"><b>{filteredReposType.length}</b> results for repositories written in <b> {this.state.searchLanguage} </b>\n        <button className=\"clearFilter\" onClick={this.clearSearch.bind(this)}>X Clear Filter</button></li>\n        }\n      {/*Only for search input and searchtype*/}\n      {this.state.search.length>0 && this.state.searchType.length>0 && !this.state.searchLanguage.length>0 && \n        <li className=\"searchResults\"><b>{filteredReposType.length}</b> results for repositories matching <b> {this.state.search} </b>\n        <button className=\"clearFilter\" onClick={this.clearSearch.bind(this)}>X Clear Filter</button></li>\n        }\n      {/*Only for search input and searchLanguage*/}\n      {this.state.search.length>0 && !this.state.searchType.length>0 && this.state.searchLanguage.length>0 && \n        <li className=\"searchResults\"><b>{filteredReposType.length}</b> results for repositories matching <b> {this.state.search} </b> \n        written in <b>{this.state.searchLanguage}</b>\n        <button className=\"clearFilter\" onClick={this.clearSearch.bind(this)}>X Clear Filter</button></li>\n        }\n      {/*Only for searchtype and searchLanguage*/}\n      {!this.state.search.length>0 && this.state.searchType.length>0 && this.state.searchLanguage.length>0 && \n        <li className=\"searchResults\"><b>{filteredReposType.length}</b> results for  <b> {this.state.searchType}  </b> repositories\n        written in <b> {this.state.searchLanguage} </b>\n        <button className=\"clearFilter\" onClick={this.clearSearch.bind(this)}>X Clear Filter</button></li>\n        }\n      {/*Full Search*/}\n      {this.state.search.length>0 && this.state.searchType.length>0 && this.state.searchLanguage.length>0 && \n        <li className=\"searchResults\"><b>{filteredReposType.length}</b> results for <b> {this.state.searchType} </b> repositories matching\n        <b> {this.state.search} </b> written in \n        <b> {this.state.searchLanguage} </b>\n        <button className=\"clearFilter\" onClick={this.clearSearch.bind(this)}>X Clear Filter</button></li>\n        }        \n\n        {/*Search Results with search type and language*/}\n        {this.state.searchType.length>0 && this.state.searchLanguage.length>0 && filteredReposType.map(item=>(\n          <li className=\"search-list\" key={item.id}>\n          <p><a href={item.html_url} target=\"_blank\">{item.name}</a></p>\n          <small className=\"repos-lang\">{item.language}</small>\n          <small>Updated on {new Intl.DateTimeFormat('en-GB', { \n                month: 'short', \n                day: '2-digit',\n                year: 'numeric', \n            }).format(new Date(item.updated_at))}</small>\n          </li>\n          ))}\n\n        {/*Search Results with only search type*/}\n        {this.state.searchType.length>0 && !this.state.searchLanguage.length>0 && filteredReposType.map(item=>(\n          <li className=\"search-list\" key={item.id}>\n          <p><a href={item.html_url} target=\"_blank\">{item.name}</a></p>\n          <small className=\"repos-lang\">{item.language}</small>\n          <small>Updated on {new Intl.DateTimeFormat('en-GB', { \n                month: 'short', \n                day: '2-digit',\n                year: 'numeric', \n            }).format(new Date(item.updated_at))}</small>\n          </li>\n          ))}\n\n        {/*Search Results with only search language*/}\n        {!this.state.searchType.length>0 && this.state.searchLanguage.length>0 && filteredReposType.map(item=>(\n          <li className=\"search-list\" key={item.id}>\n          <p><a href={item.html_url} target=\"_blank\">{item.name}</a></p>\n          <small className=\"repos-lang\">{item.language}</small>\n          <small>Updated on {new Intl.DateTimeFormat('en-GB', { \n                month: 'short', \n                day: '2-digit',\n                year: 'numeric', \n            }).format(new Date(item.updated_at))}</small>\n          </li>\n          ))}\n\n        {/*Search Results with only search input*/}\n        {!this.state.searchType.length>0 && !this.state.searchLanguage.length>0 && filteredRepos.map(item=>(\n          <li className=\"search-list\" key={item.id}>\n          <p><a href={item.html_url} target=\"_blank\">{item.name}</a></p>\n          <small className=\"repos-lang\">{item.language}</small>\n          <small>Updated on {new Intl.DateTimeFormat('en-GB', { \n                month: 'short', \n                day: '2-digit',\n                year: 'numeric', \n            }).format(new Date(item.updated_at))}</small>\n          </li>\n          ))}\n      </div>\n      </div>\n  </div>\n  );\n  }\n}\n\nexport default App;","import React, { Component } from 'react';\nimport '../styles/leftpane.css'\nimport RightPanel from './rightPanel';\n\nclass LeftPanel extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            profile: null,\n            fullname: null,\n            profile_name: null,\n            profile_image: null,\n            bio: null,\n            company: null,\n            location: null,\n            email: 'Not Listed',\n            public_repos: 0,\n            public_gists: 0,\n            followers: 0,\n            following: 0,\n        }\n    }\n\n    componentDidMount() {\n        document.onscroll = function () {\n            if (window.innerHeight + window.scrollY > 1000) {\n                document.getElementsByClassName('leftNav')[0].style.display = 'none';\n                document.getElementsByClassName('leftNav1')[0].style.display = 'block';\n            } else {\n                document.getElementsByClassName('leftNav')[0].style.display = 'block';\n                document.getElementsByClassName('leftNav1')[0].style.display = 'none';\n            }\n        }\n\n        fetch('https://api.github.com/users/supreetsingh247')\n            .then(response => response.json())\n            .then(response => this.setState({\n                profile: response.avatar_url,\n                fullname: response.name,\n                profile_name: response.login,\n                bio: response.bio,\n                company: response.company,\n                location: response.location,\n                public_repos: response.public_repos,\n                public_gists: response.public_gists,\n                followers: response.followers,\n                following: response.following,\n            }))\n            .catch(err => console.error(err))\n    }\n\n    render() {\n        return (\n            <div className=\"maindiv\">\n                <div className=\"leftNav1\">\n                    <img className=\"profile_image1\" src={this.state.profile} alt=\"supreet singh\" />&nbsp;&nbsp;\n                    <span className=\"spanclass1\">supreetsingh247&nbsp;&nbsp; <button className=\"buttonfollow1\">Follow</button></span>\n                </div>\n                <div className=\"leftNav\">\n                    <div className=\"imagediv\">\n                        <img className=\"profile_image\" src={this.state.profile} alt=\"supreet singh\" />\n                    </div>\n                    <div style={{ textAlign: \"left\"}}>\n                        <div className=\"nameSection\">\n                            <br />\n                            <span className=\"main_name\">{this.state.fullname}</span>\n                            <br />\n                            <span className=\"main_id\">{this.state.profile_name}</span>\n                            <br />\n                            <button className=\"buttonFollow\">Follow</button>\n                        </div>\n\n                        <div className=\"bioData\">\n                            <p>{this.state.bio}</p>\n                            <p>\n                                <svg className=\"octicon octicon-organization\" viewBox=\"0 0 16 10\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\">\n                                    <path style={{ fill: \"gray\" }} fillRule=\"evenodd\" d=\"M16 12.999c0 .439-.45 1-1 1H7.995c-.539 0-.994-.447-.995-.999H1c-.54 0-1-.561-1-1 0-2.634 3-4 3-4s.229-.409 0-1c-.841-.621-1.058-.59-1-3 .058-2.419 1.367-3 2.5-3s2.442.58 2.5 3c.058 2.41-.159 2.379-1 3-.229.59 0 1 0 1s1.549.711 2.42 2.088C9.196 9.369 10 8.999 10 8.999s.229-.409 0-1c-.841-.62-1.058-.59-1-3 .058-2.419 1.367-3 2.5-3s2.437.581 2.495 3c.059 2.41-.158 2.38-1 3-.229.59 0 1 0 1s3.005 1.366 3.005 4z\"></path>\n                                </svg>\n                                &nbsp;&nbsp;{this.state.company}\n                            </p>\n                            <p>\n                                <svg className=\"octicon octicon-location\" viewBox=\"0 0 12 10\" version=\"1.1\" width=\"12\" height=\"16\" aria-hidden=\"true\">\n                                    <path style={{ fill: \"gray\" }} fillRule=\"evenodd\" d=\"M6 0C2.69 0 0 2.5 0 5.5 0 10.02 6 16 6 16s6-5.98 6-10.5C12 2.5 9.31 0 6 0zm0 14.55C4.14 12.52 1 8.44 1 5.5 1 3.02 3.25 1 6 1c1.34 0 2.61.48 3.56 1.36.92.86 1.44 1.97 1.44 3.14 0 2.94-3.14 7.02-5 9.05zM8 5.5c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z\"></path>\n                                </svg>\n                                &nbsp;&nbsp;{this.state.location}\n                            </p>\n                            <p><svg className=\"octicon octicon-mail\" viewBox=\"0 0 14 10\" version=\"1.1\" width=\"14\" height=\"16\" aria-hidden=\"true\">\n                                <path style={{ fill: \"gray\" }} fillRule=\"evenodd\" d=\"M0 4v8c0 .55.45 1 1 1h12c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1H1c-.55 0-1 .45-1 1zm13 0L7 9 1 4h12zM1 5.5l4 3-4 3v-6zM2 12l3.5-3L7 10.5 8.5 9l3.5 3H2zm11-.5l-4-3 4-3v6z\"></path></svg>\n                                &nbsp;&nbsp;{this.state.email}\n                            </p>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"rightNav\">\n                    <div className=\"rightTopMenu\">\n\n                        <ul id=\"menu\">\n                            <li>\n                                Overview\n                            </li>\n                            <li className=\"active\" style={{ borderBottomColor: \"#e36209\",fontWeight: \"bolder\",color: \"black\" }}>\n                                Repositories<span>{this.state.public_repos}</span>\n                            </li>\n                            <li>\n                                Projects<span>{this.state.public_gists}</span>\n                            </li>\n                            <li>\n                                Stars<span>7</span>\n                            </li>\n                            <li>\n                                Followers<span>{this.state.followers}</span>\n                            </li>\n                            <li>\n                                Following<span>{this.state.following}</span>\n                            </li>\n                        </ul>\n                        <hr />\n                    </div>\n\n                    {/* <div> */}\n                        <RightPanel />\n                    {/* </div> */}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default LeftPanel;\n","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport LeftPanel from './components/leftPanel';\n// import App from './App';\n\nclass App2 extends Component {\n  render() {\n    return (\n      <div>\n          <Header />\n          <div style={{marginTop: \"16px\",width: \"96%\"}}>\n            <LeftPanel />\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default App2;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import Header from './components/Header';\nimport App2 from './App2';\n\n\nReactDOM.render(<App2 />, document.getElementById('root'));\n"],"sourceRoot":""}