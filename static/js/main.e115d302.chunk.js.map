{"version":3,"sources":["components/Header.js","components/rightPanel.js","App.js","components/leftPanel.js","App2.js","index.js"],"names":["Header","className","type","placeholder","href","style","marginLeft","height","viewBox","version","width","aria-hidden","fillRule","d","paddingLeft","src","alt","RightPanel","Component","props","state","repos","languages","search","searchType","searchLanguage","fetch","then","response","json","setState","res","map","item","language","filter","idx","arr","indexOf","catch","err","console","error","event","this","includes","target","value","substr","filteredRepos","name","toLowerCase","filteredReposType","length","fork","has_issues","archived","mirror_url","log","onChange","searchRepo","bind","hidden","onClick","clearSearch","key","id","html_url","description","fontSize","license","stargazers_count","watchers_count","Intl","DateTimeFormat","month","day","year","format","Date","updated_at","LeftPanel","profile","fullname","profile_name","profile_image","bio","company","location","email","public_repos","public_gists","followers","following","avatar_url","login","textAlign","fill","borderBottomColor","App2","marginTop","ReactDOM","render","document","getElementById"],"mappings":"ySA6DeA,MA1Df,WACI,OACI,yBAAKC,UAAU,cACX,yBAAKA,UAAU,iBACX,0BAAMA,UAAU,cAAhB,SAEI,yBAAKA,UAAU,gBACX,2BAAOC,KAAK,OAAOD,UAAU,YAAYE,YAAY,yBACrD,6BACA,uBAAGC,KAAK,yBAAyBH,UAAU,eAA3C,iBACA,6BACA,uBAAGG,KAAK,yBAAyBH,UAAU,eAA3C,UACA,6BACA,uBAAGG,KAAK,yBAAyBH,UAAU,eAA3C,eACA,6BACA,uBAAGG,KAAK,yBAAyBH,UAAU,eAA3C,WACA,6BACA,+BAMZ,yBAAKA,UAAU,WACX,yBAAKI,MAAO,CAAEC,WAAY,QAAUL,UAAU,6CAA6CM,OAAO,KAAKC,QAAQ,YAAYC,QAAQ,MAAMC,MAAM,KAAKC,cAAY,QAAO,0BAAMC,SAAS,UAAUC,EAAE,+jBAEtM,2BAAOX,KAAK,OAAOD,UAAU,WAAWE,YAAY,yBACpD,yBAAKF,UAAU,mBACX,uBAAGG,KAAK,yBAAyBH,UAAU,eAA3C,iBACA,uBAAGG,KAAK,yBAAyBH,UAAU,eAA3C,UACA,uBAAGG,KAAK,yBAAyBH,UAAU,eAA3C,eACA,uBAAGG,KAAK,yBAAyBH,UAAU,eAA3C,YAGJ,yBAAKA,UAAU,mBACX,uBAAGG,KAAK,oCACJ,yBAAKH,UAAU,uBAAuBO,QAAQ,YAAYC,QAAQ,MAAMC,MAAM,KAAKH,OAAO,KAAKI,cAAY,QAAO,0BAAMC,SAAS,UAAUC,EAAE,qMAEjJ,yBAAKZ,UAAU,WACX,yBAAKI,MAAO,CAAES,YAAa,IAAMb,UAAU,uBAAuBQ,QAAQ,MAAMC,MAAM,KAAKH,OAAO,KAAKI,cAAY,QAC/G,0BAAMC,SAAS,UAAUC,EAAE,oCAE/B,yBAAKZ,UAAU,UACX,uBAAGG,KAAK,qBAAqBH,UAAU,YAAvC,kBAAoE,6BACpE,uBAAGG,KAAK,qBAAqBH,UAAU,YAAvC,qBAAuE,6BACvE,uBAAGG,KAAK,qBAAqBH,UAAU,YAAvC,YAA8D,6BAC9D,uBAAGG,KAAK,qBAAqBH,UAAU,YAAvC,oBAAsE,6BACtE,uBAAGG,KAAK,qBAAqBH,UAAU,YAAvC,eAAiE,6BACjE,6BAEJ,0CAEJ,yBAAKA,UAAU,kBAAkBc,IAAI,6DAA6DC,IAAI,QAlB1G,IAkBmH,2CCkPhHC,GCtSGC,Y,wBDCd,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAEDC,MAAQ,CACTC,MAAO,GACPC,UAAW,GACXpB,KAAM,CAAC,MAAO,UAAW,QAAS,WAAY,WAC9CqB,OAAQ,GACRC,WAAY,GACZC,eAAgB,IATL,E,iFAaE,IAAD,OAChBC,MAAM,sDACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAQ,OAAI,EAAKE,SAAS,CAAET,MAAOO,OACxCD,MAAK,SAAAI,GAAG,OACL,EAAKD,SAAS,CAAER,UAAW,EAAKF,MAAMC,MAAMW,KAAI,SAAAC,GAAI,OAAIA,EAAKC,YAAUC,QAAO,SAACF,EAAMG,EAAKC,GAAZ,OAAoBA,EAAIC,QAAQL,IAASG,GAA4B,IAArBC,EAAIC,QAAQL,WAE7IM,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,Q,iCAGzBG,GAEHC,KAAKxB,MAAMlB,KAAK2C,SAASF,EAAMG,OAAOC,OACtCH,KAAKd,SAAS,CAAEN,WAAYmB,EAAMG,OAAOC,MAAMC,OAAO,KAGjDJ,KAAKxB,MAAME,UAAUuB,SAASF,EAAMG,OAAOC,OAChDH,KAAKd,SAAS,CAAEL,eAAgBkB,EAAMG,OAAOC,MAAMC,OAAO,KAI1DJ,KAAKd,SAAS,CAAEP,OAAQoB,EAAMG,OAAOC,MAAMC,OAAO,O,kCAK9CL,GACRC,KAAKd,SAAS,CAAEP,OAAQ,GAAIC,WAAY,GAAIC,eAAgB,O,+BAGtD,IAAD,OAEDwB,EAAgBL,KAAKxB,MAAMC,MAAMc,QACjC,SAACF,GACG,OAA6E,IAAtEA,EAAKiB,KAAKC,cAAcb,QAAQ,EAAKlB,MAAMG,OAAO4B,kBAG7DC,EAAoBR,KAAKxB,MAAMC,MAAMc,QACrC,SAACF,GAEG,GAAI,EAAKb,MAAMK,eAAe4B,OAAS,EAAG,CACtC,GAA8B,QAA1B,EAAKjC,MAAMI,aAA8F,IAAtES,EAAKiB,KAAKC,cAAcb,QAAQ,EAAKlB,MAAMG,OAAO4B,gBAAyBlB,EAAKC,WAAa,EAAKd,MAAMK,eAC3I,OAAOwB,EAEX,GAA8B,UAA1B,EAAK7B,MAAMI,aAAgG,IAAtES,EAAKiB,KAAKC,cAAcb,QAAQ,EAAKlB,MAAMG,OAAO4B,gBAAyBlB,EAAKC,WAAa,EAAKd,MAAMK,eAC7I,OAAqB,IAAdQ,EAAKqB,KAEhB,GAA8B,YAA1B,EAAKlC,MAAMI,aAAkG,IAAtES,EAAKiB,KAAKC,cAAcb,QAAQ,EAAKlB,MAAMG,OAAO4B,gBAAyBlB,EAAKC,WAAa,EAAKd,MAAMK,eAC/I,OAA2B,IAApBQ,EAAKsB,WAEhB,GAA8B,aAA1B,EAAKnC,MAAMI,aAAmG,IAAtES,EAAKiB,KAAKC,cAAcb,QAAQ,EAAKlB,MAAMG,OAAO4B,gBAAyBlB,EAAKC,WAAa,EAAKd,MAAMK,eAChJ,OAAyB,IAAlBQ,EAAKuB,SAEhB,GAA8B,YAA1B,EAAKpC,MAAMI,aAAkG,IAAtES,EAAKiB,KAAKC,cAAcb,QAAQ,EAAKlB,MAAMG,OAAO4B,gBAAyBlB,EAAKC,WAAa,EAAKd,MAAMK,eAC/I,OAA2B,OAApBQ,EAAKwB,WAEhB,IAA0E,IAAtExB,EAAKiB,KAAKC,cAAcb,QAAQ,EAAKlB,MAAMG,OAAO4B,gBAAyBlB,EAAKC,WAAa,EAAKd,MAAMK,eACxG,OAAOwB,MAER,CAEH,GADAR,QAAQiB,IAAI,QACkB,UAA1B,EAAKtC,MAAMI,aAAgG,IAAtES,EAAKiB,KAAKC,cAAcb,QAAQ,EAAKlB,MAAMG,OAAO4B,eACvF,OAAqB,IAAdlB,EAAKqB,KAEhB,GAA8B,QAA1B,EAAKlC,MAAMI,aAA8F,IAAtES,EAAKiB,KAAKC,cAAcb,QAAQ,EAAKlB,MAAMG,OAAO4B,eACrF,OAAOF,EAEX,GAA8B,YAA1B,EAAK7B,MAAMI,aAAkG,IAAtES,EAAKiB,KAAKC,cAAcb,QAAQ,EAAKlB,MAAMG,OAAO4B,eACzF,OAA2B,IAApBlB,EAAKsB,WAEhB,GAA8B,aAA1B,EAAKnC,MAAMI,aAAmG,IAAtES,EAAKiB,KAAKC,cAAcb,QAAQ,EAAKlB,MAAMG,OAAO4B,eAC1F,OAAyB,IAAlBlB,EAAKuB,SAEhB,GAA8B,YAA1B,EAAKpC,MAAMI,aAAkG,IAAtES,EAAKiB,KAAKC,cAAcb,QAAQ,EAAKlB,MAAMG,OAAO4B,eACzF,OAA2B,OAApBlB,EAAKwB,eAI5B,OACI,6BACI,6BACI,yBAAKxD,UAAU,eACX,2BAAOC,KAAK,OACR6C,MAAOH,KAAKxB,MAAMG,OAClBoC,SAAUf,KAAKgB,WAAWC,KAAKjB,MAC/BzC,YAAY,uBACZF,UAAU,iBAEd,4BAAQA,UAAU,cACd8C,MAAOH,KAAKxB,MAAMI,WAClBmC,SAAUf,KAAKgB,WAAWC,KAAKjB,OAC/B,4BAAQkB,QAAM,GAAd,aACClB,KAAKxB,MAAMlB,KAAK8B,KAAI,SAAAC,GAAI,OACrB,4BAAQc,MAAOd,GAAOA,OAI9B,4BAAQhC,UAAU,kBACd8C,MAAOH,KAAKxB,MAAMK,eAClBkC,SAAUf,KAAKgB,WAAWC,KAAKjB,OAC/B,4BAAQkB,QAAM,GAAd,iBACClB,KAAKxB,MAAME,UAAUU,KAAI,SAAAC,GAAI,OAC1B,4BAAQc,MAAOd,GAAOA,QAKlC,yBAAKhC,UAAU,eAEV2C,KAAKxB,MAAMG,OAAO8B,OAAS,IAAMT,KAAKxB,MAAMI,WAAW6B,OAAS,IAAMT,KAAKxB,MAAMK,eAAe4B,OAAS,GACtG,wBAAIpD,UAAU,iBAAgB,2BAAIgD,EAAcI,QAAhD,sCAA8F,+BAAKT,KAAKxB,MAAMG,OAAhB,KAC1F,4BAAQtB,UAAU,cAAc8D,QAASnB,KAAKoB,YAAYH,KAAKjB,OAA/D,uBADJ,KAKHA,KAAKxB,MAAMG,OAAO8B,OAAS,GAAKT,KAAKxB,MAAMI,WAAW6B,OAAS,GAAKT,KAAKxB,MAAMK,eAAe4B,OAAS,GACpG,wBAAIpD,UAAU,iBAAgB,2BAAImD,EAAkBC,QAApD,gBAA4E,+BAAKT,KAAKxB,MAAMI,WAAhB,KAA5E,yBACpB,+BAAKoB,KAAKxB,MAAMG,OAAhB,KADoB,cAEpB,+BAAKqB,KAAKxB,MAAMK,eAAhB,KACwB,4BAAQxB,UAAU,cAAc8D,QAASnB,KAAKoB,YAAYH,KAAKjB,OAA/D,wBAIPA,KAAKxB,MAAMI,WAAW6B,OAAS,GAAKT,KAAKxB,MAAMK,eAAe4B,OAAS,GAAKD,EAAkBpB,KAAI,SAAAC,GAAI,OACnG,wBAAIhC,UAAU,cAAcgE,IAAKhC,EAAKiC,IAClC,2BAAG,uBAAG9D,KAAM6B,EAAKkC,SAAUrB,OAAO,UAAUb,EAAKiB,OAG7CjB,EAAKmC,aACD,2BAAO/D,MAAO,CAACgE,SAAU,KACpBpC,EAAKmC,YACN,8BAIZ,2BACCnC,EAAKC,UAAa,2BAAOjC,UAAU,cAAa,0BAAMA,UAAU,aAA9C,IAAkEgC,EAAKC,UACzFD,EAAKqC,SACF,+BAAQrC,EAAKqC,QAAQpB,MAGrBjB,EAAKsC,iBAAiB,GAClB,yCAAiBtC,EAAKsC,kBAK1BtC,EAAKuC,eAAe,GAChB,yCAAgBvC,EAAKuC,gBAG7B,6CAAmB,IAAIC,KAAKC,eAAe,QAAS,CAChDC,MAAO,QACPC,IAAK,UACLC,KAAM,YACPC,OAAO,IAAIC,KAAK9C,EAAK+C,mBAM/BpC,KAAKxB,MAAMI,WAAW6B,OAAS,IAAMT,KAAKxB,MAAMK,eAAe4B,OAAS,GAAKD,EAAkBpB,KAAI,SAAAC,GAAI,OACpG,wBAAIhC,UAAU,cAAcgE,IAAKhC,EAAKiC,IAClC,2BAAG,uBAAG9D,KAAM6B,EAAKkC,SAAUrB,OAAO,UAAUb,EAAKiB,OAG7CjB,EAAKmC,aACD,2BAAO/D,MAAO,CAACgE,SAAU,KACpBpC,EAAKmC,YACN,8BAIZ,2BACCnC,EAAKC,UAAa,2BAAOjC,UAAU,cAAa,0BAAMA,UAAU,aAA9C,IAAkEgC,EAAKC,UACzFD,EAAKqC,SACF,+BAAQrC,EAAKqC,QAAQpB,MAGrBjB,EAAKsC,iBAAiB,GAClB,yCAAiBtC,EAAKsC,kBAK1BtC,EAAKuC,eAAe,GAChB,yCAAgBvC,EAAKuC,gBAG7B,6CAAmB,IAAIC,KAAKC,eAAe,QAAS,CAChDC,MAAO,QACPC,IAAK,UACLC,KAAM,YACPC,OAAO,IAAIC,KAAK9C,EAAK+C,oBAM9BpC,KAAKxB,MAAMI,WAAW6B,OAAS,GAAKT,KAAKxB,MAAMK,eAAe4B,OAAS,GAAKD,EAAkBpB,KAAI,SAAAC,GAAI,OACpG,wBAAIhC,UAAU,cAAcgE,IAAKhC,EAAKiC,IAClC,2BAAG,uBAAG9D,KAAM6B,EAAKkC,SAAUrB,OAAO,UAAUb,EAAKiB,OAG7CjB,EAAKmC,aACD,2BAAO/D,MAAO,CAACgE,SAAU,KACpBpC,EAAKmC,YACN,8BAIZ,2BACCnC,EAAKC,UAAa,2BAAOjC,UAAU,cAAa,0BAAMA,UAAU,aAA9C,IAAkEgC,EAAKC,UACzFD,EAAKqC,SACF,+BAAQrC,EAAKqC,QAAQpB,MAGrBjB,EAAKsC,iBAAiB,GAClB,yCAAiBtC,EAAKsC,kBAK1BtC,EAAKuC,eAAe,GAChB,yCAAgBvC,EAAKuC,gBAG7B,6CAAmB,IAAIC,KAAKC,eAAe,QAAS,CAChDC,MAAO,QACPC,IAAK,UACLC,KAAM,YACPC,OAAO,IAAIC,KAAK9C,EAAK+C,oBAM9BpC,KAAKxB,MAAMI,WAAW6B,OAAS,IAAMT,KAAKxB,MAAMK,eAAe4B,OAAS,GAAKJ,EAAcjB,KAAI,SAAAC,GAAI,OACjG,wBAAIhC,UAAU,cAAcgE,IAAKhC,EAAKiC,IAClC,2BAAG,uBAAG9D,KAAM6B,EAAKkC,SAAUrB,OAAO,UAAUb,EAAKiB,OAG7CjB,EAAKmC,aACD,2BAAO/D,MAAO,CAACgE,SAAU,KACpBpC,EAAKmC,YACN,8BAIZ,2BACCnC,EAAKC,UAAa,2BAAOjC,UAAU,cAAa,0BAAMA,UAAU,aAA9C,IAAkEgC,EAAKC,UACzFD,EAAKqC,SACF,+BAAQrC,EAAKqC,QAAQpB,MAGrBjB,EAAKsC,iBAAiB,GAClB,yCAAiBtC,EAAKsC,kBAK1BtC,EAAKuC,eAAe,GAChB,yCAAgBvC,EAAKuC,gBAG7B,6CAAmB,IAAIC,KAAKC,eAAe,QAAS,CAChDC,MAAO,QACPC,IAAK,UACLC,KAAM,YACPC,OAAO,IAAIC,KAAK9C,EAAK+C,0B,GA3R/B9D,cEuHV+D,E,YArHX,WAAY9D,GAAQ,IAAD,8BACf,4CAAMA,KAEDC,MAAQ,CACT8D,QAAS,KACTC,SAAU,KACVC,aAAc,KACdC,cAAe,KACfC,IAAK,KACLC,QAAS,KACTC,SAAU,KACVC,MAAO,aACPC,aAAc,EACdC,aAAc,EACdC,UAAW,EACXC,UAAW,GAfA,E,iFAmBE,IAAD,OAChBnE,MAAM,gDACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAQ,OAAI,EAAKE,SAAS,CAC5BoD,QAAStD,EAASkE,WAClBX,SAAUvD,EAASsB,KACnBkC,aAAcxD,EAASmE,MACvBT,IAAK1D,EAAS0D,IACdC,QAAS3D,EAAS2D,QAClBC,SAAU5D,EAAS4D,SACnBE,aAAc9D,EAAS8D,aACvBC,aAAc/D,EAAS+D,aACvBC,UAAWhE,EAASgE,UACpBC,UAAWjE,EAASiE,eAEvBtD,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,Q,+BAIhC,OACI,yBAAKvC,UAAU,WACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,gBAAgBc,IAAK6B,KAAKxB,MAAM8D,QAASlE,IAAI,mBAEhE,yBAAKX,MAAO,CAAE2F,UAAW,OAAQ1F,WAAY,KACzC,yBAAKL,UAAU,eACX,6BACA,0BAAMA,UAAU,aAAa2C,KAAKxB,MAAM+D,UACxC,6BACA,0BAAMlF,UAAU,WAAW2C,KAAKxB,MAAMgE,cACtC,6BACA,4BAAQnF,UAAU,gBAAlB,WAGJ,yBAAKA,UAAU,WACX,2BAAI2C,KAAKxB,MAAMkE,KACf,2BACI,yBAAKrF,UAAU,+BAA+BO,QAAQ,YAAYC,QAAQ,MAAMC,MAAM,KAAKH,OAAO,KAAKI,cAAY,QAC/G,0BAAMN,MAAO,CAAE4F,KAAM,QAAUrF,SAAS,UAAUC,EAAE,gaAEvD+B,KAAKxB,MAAMmE,SAEhB,2BACI,yBAAKtF,UAAU,2BAA2BO,QAAQ,YAAYC,QAAQ,MAAMC,MAAM,KAAKH,OAAO,KAAKI,cAAY,QAC3G,0BAAMN,MAAO,CAAE4F,KAAM,QAAUrF,SAAS,UAAUC,EAAE,wRAF5D,OAIW+B,KAAKxB,MAAMoE,UAEtB,2BAAG,yBAAKvF,UAAU,uBAAuBO,QAAQ,YAAYC,QAAQ,MAAMC,MAAM,KAAKH,OAAO,KAAKI,cAAY,QAC1G,0BAAMN,MAAO,CAAE4F,KAAM,QAAUrF,SAAS,UAAUC,EAAE,0KACnD+B,KAAKxB,MAAMqE,UAM5B,yBAAKxF,UAAU,YACX,yBAAKA,UAAU,gBAQX,wBAAIiE,GAAG,QACH,wCAGA,wBAAIjE,UAAU,SAASI,MAAO,CAAE6F,kBAAmB,YAAnD,eACgB,8BAAOtD,KAAKxB,MAAMsE,eAElC,uCACY,8BAAO9C,KAAKxB,MAAMuE,eAE9B,oCACS,oCAET,wCACa,8BAAO/C,KAAKxB,MAAMwE,YAE/B,wCACa,8BAAOhD,KAAKxB,MAAMyE,aAGnC,8BAGJ,6BACI,kBAAC,EAAD,a,GA9GA3E,aCcTiF,E,iLAXX,OACE,6BACI,kBAAC,EAAD,MACA,yBAAK9F,MAAO,CAAC+F,UAAW,OAAO1F,MAAO,QACpC,kBAAC,EAAD,Y,GANOQ,aCGnBmF,IAASC,OAAO,kBAAC,EAAD,MAAUC,SAASC,eAAe,W","file":"static/js/main.e115d302.chunk.js","sourcesContent":["import React from 'react'\nimport '../styles/headerstyles.css'\n\nfunction Header() {\n    return (\n        <div className=\"mainheader\">\n            <div className=\"responsiveDiv\">\n                <span className=\"menuToggle\">\n                    &#9776;\n                    <div className=\"menuDivision\">\n                        <input type=\"text\" className=\"inputOne2\" placeholder=\"Search or jump to...\" />\n                        <hr/>\n                        <a href=\"https://www.google.com\" className=\"linksHeader\">Pull requests</a>\n                        <hr/>\n                        <a href=\"https://www.google.com\" className=\"linksHeader\">Issues</a>\n                        <hr/>\n                        <a href=\"https://www.google.com\" className=\"linksHeader\">Marketplace</a>\n                        <hr />\n                        <a href=\"https://www.google.com\" className=\"linksHeader\">Explore</a>\n                        <hr />\n                        <i></i>\n                    </div>\n                </span>\n            </div>\n\n\n            <div className=\"iconDiv\">\n                <svg style={{ marginLeft: \"20px\" }} className=\"octicon octicon-mark-github v-align-middle\" height=\"32\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"32\" aria-hidden=\"true\"><path fillRule=\"evenodd\" d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\"></path></svg>\n            </div>\n            <input type=\"text\" className=\"inputOne\" placeholder=\"Search or jump to...\" />\n            <div className=\"navigationNames\">\n                <a href=\"https://www.google.com\" className=\"linksHeader\">Pull requests</a>\n                <a href=\"https://www.google.com\" className=\"linksHeader\">Issues</a>\n                <a href=\"https://www.google.com\" className=\"linksHeader\">Marketplace</a>\n                <a href=\"https://www.google.com\" className=\"linksHeader\">Explore</a>\n            </div>\n\n            <div className=\"rightNavigation\">\n                <a href=\"https://github.com/notifications\">\n                    <svg className=\"octicon octicon-bell\" viewBox=\"0 0 14 16\" version=\"1.1\" width=\"14\" height=\"16\" aria-hidden=\"true\"><path fillRule=\"evenodd\" d=\"M14 12v1H0v-1l.73-.58c.77-.77.81-2.55 1.19-4.42C2.69 3.23 6 2 6 2c0-.55.45-1 1-1s1 .45 1 1c0 0 3.39 1.23 4.16 5 .38 1.88.42 3.66 1.19 4.42l.66.58H14zm-7 4c1.11 0 2-.89 2-2H5c0 1.11.89 2 2 2z\"></path></svg>\n                </a>\n                <div className=\"tooltip\">\n                    <svg style={{ paddingLeft: 10 }} className=\"octicon octicon-plus\" version=\"1.1\" width=\"12\" height=\"16\" aria-hidden=\"true\">\n                        <path fillRule=\"evenodd\" d=\"M12 9H7v5H5V9H0V7h5V2h2v5h5v2z\"></path>\n                    </svg>\n                    <div className=\"bottom\">\n                        <a href=\"https://github.com\" className=\"href_two\">New Repository</a><br />\n                        <a href=\"https://github.com\" className=\"href_two\">Import Repository</a><br />\n                        <a href=\"https://github.com\" className=\"href_two\">New Gist</a><br />\n                        <a href=\"https://github.com\" className=\"href_two\">New organization</a><br />\n                        <a href=\"https://github.com\" className=\"href_two\">New project</a><br />\n                        <i></i>\n                    </div>\n                    <span> &#x25bc;</span>\n                </div>\n                <img className=\"image_and_caret\" src=\"https://avatars3.githubusercontent.com/u/33048355?s=40&v=4\" alt=\"img\" /> <span>&#x25bc;</span>\n            </div>\n        </div>\n    )\n}\n\nexport default Header\n","import React, { Component } from 'react';\nimport '../styles/rightpane.css'\n\nclass RightPanel extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            repos: [],\n            languages: [],\n            type: [\"All\", \"Sources\", \"Forks\", \"Archived\", \"Mirrors\"],\n            search: '',\n            searchType: '',\n            searchLanguage: ''\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://api.github.com/users/ganeshbhusi/repos')\n            .then(response => response.json())\n            .then(response => this.setState({ repos: response }))\n            .then(res =>\n                this.setState({ languages: this.state.repos.map(item => item.language).filter((item, idx, arr) => arr.indexOf(item) == idx && arr.indexOf(item) != \"\") })\n            )\n            .catch(err => console.error(err))\n    }\n\n    searchRepo(event) {\n        /*If type array contains type string*/\n        if (this.state.type.includes(event.target.value)) {\n            this.setState({ searchType: event.target.value.substr(0) });\n        }\n        /*If languages array contains language string*/\n        else if (this.state.languages.includes(event.target.value)) {\n            this.setState({ searchLanguage: event.target.value.substr(0) });\n        }\n        /*If data contains project name*/\n        else {\n            this.setState({ search: event.target.value.substr(0) });\n        }\n    }\n\n\n    clearSearch(event) {\n        this.setState({ search: \"\", searchType: \"\", searchLanguage: \"\" });\n    }\n\n    render() {\n        /*Normal Search filtering using project name*/\n        let filteredRepos = this.state.repos.filter(\n            (item) => {\n                return item.name.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1;\n            });\n        /*Search filtering using Type and Language along with project name*/\n        let filteredReposType = this.state.repos.filter(\n            (item) => {\n                /*If Language is selected*/\n                if (this.state.searchLanguage.length > 0) {\n                    if (this.state.searchType === \"All\" && item.name.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1 && item.language === this.state.searchLanguage) {\n                        return filteredRepos;\n                    }\n                    if (this.state.searchType === \"Forks\" && item.name.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1 && item.language === this.state.searchLanguage) {\n                        return item.fork === true;\n                    }\n                    if (this.state.searchType === \"Sources\" && item.name.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1 && item.language === this.state.searchLanguage) {\n                        return item.has_issues === true;\n                    }\n                    if (this.state.searchType === \"Archived\" && item.name.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1 && item.language === this.state.searchLanguage) {\n                        return item.archived === true;\n                    }\n                    if (this.state.searchType === \"Mirrors\" && item.name.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1 && item.language === this.state.searchLanguage) {\n                        return item.mirror_url !== null;\n                    }\n                    if (item.name.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1 && item.language === this.state.searchLanguage) {\n                        return filteredRepos;\n                    }\n                } else { /*Except language remaining selected*/\n                    console.log(\"Type\");\n                    if (this.state.searchType === \"Forks\" && item.name.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1) {\n                        return item.fork === true;\n                    }\n                    if (this.state.searchType === \"All\" && item.name.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1) {\n                        return filteredRepos;\n                    }\n                    if (this.state.searchType === \"Sources\" && item.name.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1) {\n                        return item.has_issues === true;\n                    }\n                    if (this.state.searchType === \"Archived\" && item.name.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1) {\n                        return item.archived === true;\n                    }\n                    if (this.state.searchType === \"Mirrors\" && item.name.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1) {\n                        return item.mirror_url !== null;\n                    }\n                }\n            });\n        return (\n            <div>\n                <div>\n                    <div className=\"searchPanel\">\n                        <input type=\"text\"\n                            value={this.state.search}\n                            onChange={this.searchRepo.bind(this)}\n                            placeholder=\"Find a repository...\"\n                            className=\"search-input\" />\n\n                        <select className=\"search-type\"\n                            value={this.state.searchType}\n                            onChange={this.searchRepo.bind(this)}>\n                            <option hidden>Type: All</option>\n                            {this.state.type.map(item => (\n                                <option value={item}>{item}</option>\n                            ))}\n                        </select>\n\n                        <select className=\"search-language\"\n                            value={this.state.searchLanguage}\n                            onChange={this.searchRepo.bind(this)}>\n                            <option hidden>Language: All</option>\n                            {this.state.languages.map(item => (\n                                <option value={item}>{item}</option>\n                            ))}\n                        </select>\n                    </div>\n\n                    <div className=\"resultPanel\">\n                        {/*Only for search input*/}\n                        {this.state.search.length > 0 && !this.state.searchType.length > 0 && !this.state.searchLanguage.length > 0 &&\n                            <li className=\"searchResults\"><b>{filteredRepos.length}</b> results for repositories matching <b> {this.state.search} </b>\n                                <button className=\"clearFilter\" onClick={this.clearSearch.bind(this)}>&#9746; Clear filter</button> </li>\n                        }\n\n                        {/*Full Search*/}\n                        {this.state.search.length > 0 && this.state.searchType.length > 0 && this.state.searchLanguage.length > 0 &&\n                            <li className=\"searchResults\"><b>{filteredReposType.length}</b> results for <b> {this.state.searchType} </b> repositories matching\n        <b> {this.state.search} </b> written in\n        <b> {this.state.searchLanguage} </b>\n                                <button className=\"clearFilter\" onClick={this.clearSearch.bind(this)}>&#9746; Clear filter</button></li>\n                        }\n\n                        {/*Search Results with search type and language*/}\n                        {this.state.searchType.length > 0 && this.state.searchLanguage.length > 0 && filteredReposType.map(item => (\n                            <li className=\"search-list\" key={item.id}>\n                                <p><a href={item.html_url} target=\"_blank\">{item.name}</a></p>\n                                \n                                {\n                                    item.description && (\n                                        <small style={{fontSize: 14}}>\n                                            {item.description}\n                                            <br/>\n                                        </small>\n                                    )\n                                }\n                                <p>\n                                {item.language && (<small className=\"repos-lang\"><span className=\"showBall\"></span> {item.language}</small>)}\n                                {item.license && (\n                                    <small>{item.license.name}</small>\n                                )}\n                                {\n                                    item.stargazers_count>0 && (\n                                        <small>&#x2605; {item.stargazers_count}</small>\n                                    )\n                                }\n                                \n                                {\n                                    item.watchers_count>0 && (\n                                        <small>&#9739; {item.watchers_count}</small>\n                                    )\n                                }\n                                <small>Updated on {new Intl.DateTimeFormat('en-GB', {\n                                    month: 'short',\n                                    day: '2-digit',\n                                    year: 'numeric',\n                                }).format(new Date(item.updated_at))}</small>\n                                </p>\n                            </li>\n                        ))}\n\n                        {/*Search Results with only search type*/}\n                        {this.state.searchType.length > 0 && !this.state.searchLanguage.length > 0 && filteredReposType.map(item => (\n                            <li className=\"search-list\" key={item.id}>\n                                <p><a href={item.html_url} target=\"_blank\">{item.name}</a></p>\n                                \n                                {\n                                    item.description && (\n                                        <small style={{fontSize: 14}}>\n                                            {item.description}\n                                            <br/>\n                                        </small>\n                                    )\n                                }\n                                <p>\n                                {item.language && (<small className=\"repos-lang\"><span className=\"showBall\"></span> {item.language}</small>)}\n                                {item.license && (\n                                    <small>{item.license.name}</small>\n                                )}\n                                {\n                                    item.stargazers_count>0 && (\n                                        <small>&#x2605; {item.stargazers_count}</small>\n                                    )\n                                }\n                                \n                                {\n                                    item.watchers_count>0 && (\n                                        <small>&#9739; {item.watchers_count}</small>\n                                    )\n                                }\n                                <small>Updated on {new Intl.DateTimeFormat('en-GB', {\n                                    month: 'short',\n                                    day: '2-digit',\n                                    year: 'numeric',\n                                }).format(new Date(item.updated_at))}</small>\n                                </p>\n                            </li>\n                        ))}\n\n                        {/*Search Results with only search language*/}\n                        {!this.state.searchType.length > 0 && this.state.searchLanguage.length > 0 && filteredReposType.map(item => (\n                            <li className=\"search-list\" key={item.id}>\n                                <p><a href={item.html_url} target=\"_blank\">{item.name}</a></p>\n                                \n                                {\n                                    item.description && (\n                                        <small style={{fontSize: 14}}>\n                                            {item.description}\n                                            <br/>\n                                        </small>\n                                    )\n                                }\n                                <p>\n                                {item.language && (<small className=\"repos-lang\"><span className=\"showBall\"></span> {item.language}</small>)}\n                                {item.license && (\n                                    <small>{item.license.name}</small>\n                                )}\n                                {\n                                    item.stargazers_count>0 && (\n                                        <small>&#x2605; {item.stargazers_count}</small>\n                                    )\n                                }\n                                \n                                {\n                                    item.watchers_count>0 && (\n                                        <small>&#9739; {item.watchers_count}</small>\n                                    )\n                                }\n                                <small>Updated on {new Intl.DateTimeFormat('en-GB', {\n                                    month: 'short',\n                                    day: '2-digit',\n                                    year: 'numeric',\n                                }).format(new Date(item.updated_at))}</small>\n                                </p>\n                            </li>\n                        ))}\n\n                        {/*Search Results with only search input*/}\n                        {!this.state.searchType.length > 0 && !this.state.searchLanguage.length > 0 && filteredRepos.map(item => (\n                            <li className=\"search-list\" key={item.id}>\n                                <p><a href={item.html_url} target=\"_blank\">{item.name}</a></p>\n                                \n                                {\n                                    item.description && (\n                                        <small style={{fontSize: 14}}>\n                                            {item.description}\n                                            <br/>\n                                        </small>\n                                    )\n                                }\n                                <p>\n                                {item.language && (<small className=\"repos-lang\"><span className=\"showBall\"></span> {item.language}</small>)}\n                                {item.license && (\n                                    <small>{item.license.name}</small>\n                                )}\n                                {\n                                    item.stargazers_count>0 && (\n                                        <small>&#x2605; {item.stargazers_count}</small>\n                                    )\n                                }\n\n                                {\n                                    item.watchers_count>0 && (\n                                        <small>&#9739; {item.watchers_count}</small>\n                                    )\n                                }\n                                <small>Updated on {new Intl.DateTimeFormat('en-GB', {\n                                    month: 'short',\n                                    day: '2-digit',\n                                    year: 'numeric',\n                                }).format(new Date(item.updated_at))}</small>\n                                </p>\n                            </li>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default RightPanel;\n","import React, {Component} from 'react';\nimport Header from './components/Header';\n\nclass App extends Component {\n  state = {\n    profile:'',\n    fullname:'',\n    profile_name:'',\n    bio:'',\n    company:'',\n    location:'',\n    repos: [],\n    languages:[],\n    type:[\"All\",\"Sources\",\"Forks\",\"Archived\",\"Mirrors\"],\n    search:'',\n    searchType:'',\n    searchLanguage:''\n  };\n  componentDidMount(){\n    this.getProfile();\n    this.getRepos();\n  }\n  /*Getting profile data*/\n  getProfile(){\n    fetch('https://api.github.com/users/ganeshbhusi')\n      .then(response => response.json())\n      .then(response => this.setState({\n        profile: response.avatar_url,\n        fullname: response.name,\n        profile_name: response.login,\n        bio: response.bio,\n        company: response.company,\n        location: response.location}))\n      .catch(err=>console.error(err))\n  }\n  /*Getting Repositories data and filtering languages*/\n  getRepos(){\n    fetch('https://api.github.com/users/ganeshbhusi/repos')\n      .then(response => response.json())\n      .then(response => this.setState({repos: response}))\n      .then(res=>\n        this.setState({languages: this.state.repos.map(item=>item.language).filter((item,idx,arr)=> arr.indexOf(item)==idx && arr.indexOf(item)!=\"\")})\n        )\n      .catch(err=>console.error(err))\n  }\n\n  /*Searching function for all the type of searches*/\n  searchRepo(event){\n    /*If type array contains type string*/\n    if(this.state.type.includes(event.target.value))\n    {\n    this.setState({searchType: event.target.value.substr(0)});\n    }\n    /*If languages array contains language string*/\n    else if(this.state.languages.includes(event.target.value))\n    {\n    this.setState({searchLanguage: event.target.value.substr(0)});\n    }\n    /*If data contains project name*/\n    else{\n      this.setState({search: event.target.value.substr(0)});\n    }\n  }\n\n  /*To clear the search*/\n  clearSearch(event){\n    this.setState({search:\"\",searchType:\"\",searchLanguage:\"\"});\n  }\n  \n\n  render(){\n    const {profile, fullname, profile_name,bio, company, location} = this.state;\n\n    /*Normal Search filtering using project name*/\n    let filteredRepos = this.state.repos.filter(\n      (item)=>{\n        return item.name.toLowerCase().indexOf(this.state.search.toLowerCase())!==-1;\n      });\n    /*Search filtering using Type and Language along with project name*/\n    let filteredReposType = this.state.repos.filter(\n      (item)=>{\n        /*If Language is selected*/\n        if(this.state.searchLanguage.length>0){\n          if(this.state.searchType===\"All\" && item.name.toLowerCase().indexOf(this.state.search.toLowerCase())!==-1 && item.language===this.state.searchLanguage) {\n            return filteredRepos;\n          }\n          if(this.state.searchType===\"Forks\" && item.name.toLowerCase().indexOf(this.state.search.toLowerCase())!==-1 && item.language===this.state.searchLanguage){\n            return item.fork===true;\n          }\n          if(this.state.searchType===\"Sources\" && item.name.toLowerCase().indexOf(this.state.search.toLowerCase())!==-1 && item.language===this.state.searchLanguage){\n            return item.has_issues===true;\n          }\n          if(this.state.searchType===\"Archived\" && item.name.toLowerCase().indexOf(this.state.search.toLowerCase())!==-1 && item.language===this.state.searchLanguage){\n            return item.archived===true;\n          }\n          if(this.state.searchType===\"Mirrors\" && item.name.toLowerCase().indexOf(this.state.search.toLowerCase())!==-1 && item.language===this.state.searchLanguage){\n            return item.mirror_url!==null;\n          }\n          if(item.name.toLowerCase().indexOf(this.state.search.toLowerCase())!==-1 && item.language===this.state.searchLanguage) {\n            return filteredRepos;\n          }\n        } else{ /*Except language remaining selected*/\n          console.log(\"Type\");\n          if(this.state.searchType===\"Forks\" && item.name.toLowerCase().indexOf(this.state.search.toLowerCase())!==-1){\n            return item.fork===true;\n          }\n          if(this.state.searchType===\"All\" && item.name.toLowerCase().indexOf(this.state.search.toLowerCase())!==-1){\n            return filteredRepos;\n          }\n          if(this.state.searchType===\"Sources\" && item.name.toLowerCase().indexOf(this.state.search.toLowerCase())!==-1){\n            return item.has_issues===true;\n          }\n          if(this.state.searchType===\"Archived\" && item.name.toLowerCase().indexOf(this.state.search.toLowerCase())!==-1){\n            return item.archived===true;\n          }\n          if(this.state.searchType===\"Mirrors\" && item.name.toLowerCase().indexOf(this.state.search.toLowerCase())!==-1){\n            return item.mirror_url!==null;\n          }\n        }\n      });\n\n  return (\n    <div className=\"App\">\n\n      <Header />\n\n      <div className=\"leftPanel\">\n        <img src={profile} className=\"profile-pic\"/>\n        <br/>\n        <h1 className=\"fullname\">{fullname}<br/>\n          <span className=\"profile-name\">{profile_name}</span>\n        </h1>\n        <small className=\"bio\">{bio}</small>\n        <br/><br/>\n        <button className=\"edit-btn\">Edit bio</button>\n        <br/>\n        <small className=\"company\">{company}</small><br/>\n        <small className=\"location\">{location}</small><br/>\n        <small className=\"email\"><a href=\"mailto:ganeshpaul999@gmail.com\">ganeshpaul999@gmail.com</a></small>\n      </div>\n\n      <div className=\"rightPanel\">\n        <ul className=\"tabs\">\n          <li><a href=\"#\">Overview</a></li>\n          <li><a href=\"#\" className=\"active\">Repositories\n          <span className=\"reposCount\">{this.state.repos.length}</span></a></li>\n          <li><a href=\"#\">Stars</a></li>\n          <li><a href=\"#\">Followers</a></li>\n          <li><a href=\"#\">Following</a></li>\n        </ul>\n        <div className=\"searchPanel\">\n        <input type=\"text\" \n          value={this.state.search}\n          onChange={this.searchRepo.bind(this)}\n          placeholder=\"Find a repository...\" \n          className=\"search-input\"/>\n        <select className=\"search-type\"\n          value={this.state.searchType}\n          onChange={this.searchRepo.bind(this)}>\n          <option hidden>Type: All</option>\n          {this.state.type.map(item=>(\n          <option value={item}>{item}</option>\n          ))}\n        </select>\n        <select className=\"search-language\"\n          value={this.state.searchLanguage}\n          onChange={this.searchRepo.bind(this)}>\n          <option hidden>Language: All</option>\n          {this.state.languages.map(item=>(\n          <option value={item}>{item}</option>\n          ))}\n        </select>\n        <button className=\"newbtn\">New</button>\n      </div>\n\n      <div className=\"resultPanel\">\n      {/*Only for search input*/}\n      {this.state.search.length>0 && !this.state.searchType.length>0 && !this.state.searchLanguage.length>0 && \n        <li className=\"searchResults\"><b>{filteredRepos.length}</b> results for repositories matching <b> {this.state.search} </b>\n        <button className=\"clearFilter\" onClick={this.clearSearch.bind(this)}>X Clear Filter</button> </li>\n        }\n      {/*Only for searchtype*/}\n      {!this.state.search.length>0 && this.state.searchType.length>0 && !this.state.searchLanguage.length>0 && \n        <li className=\"searchResults\"><b>{filteredReposType.length}</b> results for <b> {this.state.searchType} </b> repositories\n        <button className=\"clearFilter\" onClick={this.clearSearch.bind(this)}>X Clear Filter</button></li>\n        }\n      {/*Only for searchLanguage*/}\n      {!this.state.search.length>0 && !this.state.searchType.length>0 && this.state.searchLanguage.length>0 && \n        <li className=\"searchResults\"><b>{filteredReposType.length}</b> results for repositories written in <b> {this.state.searchLanguage} </b>\n        <button className=\"clearFilter\" onClick={this.clearSearch.bind(this)}>X Clear Filter</button></li>\n        }\n      {/*Only for search input and searchtype*/}\n      {this.state.search.length>0 && this.state.searchType.length>0 && !this.state.searchLanguage.length>0 && \n        <li className=\"searchResults\"><b>{filteredReposType.length}</b> results for repositories matching <b> {this.state.search} </b>\n        <button className=\"clearFilter\" onClick={this.clearSearch.bind(this)}>X Clear Filter</button></li>\n        }\n      {/*Only for search input and searchLanguage*/}\n      {this.state.search.length>0 && !this.state.searchType.length>0 && this.state.searchLanguage.length>0 && \n        <li className=\"searchResults\"><b>{filteredReposType.length}</b> results for repositories matching <b> {this.state.search} </b> \n        written in <b>{this.state.searchLanguage}</b>\n        <button className=\"clearFilter\" onClick={this.clearSearch.bind(this)}>X Clear Filter</button></li>\n        }\n      {/*Only for searchtype and searchLanguage*/}\n      {!this.state.search.length>0 && this.state.searchType.length>0 && this.state.searchLanguage.length>0 && \n        <li className=\"searchResults\"><b>{filteredReposType.length}</b> results for  <b> {this.state.searchType}  </b> repositories\n        written in <b> {this.state.searchLanguage} </b>\n        <button className=\"clearFilter\" onClick={this.clearSearch.bind(this)}>X Clear Filter</button></li>\n        }\n      {/*Full Search*/}\n      {this.state.search.length>0 && this.state.searchType.length>0 && this.state.searchLanguage.length>0 && \n        <li className=\"searchResults\"><b>{filteredReposType.length}</b> results for <b> {this.state.searchType} </b> repositories matching\n        <b> {this.state.search} </b> written in \n        <b> {this.state.searchLanguage} </b>\n        <button className=\"clearFilter\" onClick={this.clearSearch.bind(this)}>X Clear Filter</button></li>\n        }        \n\n        {/*Search Results with search type and language*/}\n        {this.state.searchType.length>0 && this.state.searchLanguage.length>0 && filteredReposType.map(item=>(\n          <li className=\"search-list\" key={item.id}>\n          <p><a href={item.html_url} target=\"_blank\">{item.name}</a></p>\n          <small className=\"repos-lang\">{item.language}</small>\n          <small>Updated on {new Intl.DateTimeFormat('en-GB', { \n                month: 'short', \n                day: '2-digit',\n                year: 'numeric', \n            }).format(new Date(item.updated_at))}</small>\n          </li>\n          ))}\n\n        {/*Search Results with only search type*/}\n        {this.state.searchType.length>0 && !this.state.searchLanguage.length>0 && filteredReposType.map(item=>(\n          <li className=\"search-list\" key={item.id}>\n          <p><a href={item.html_url} target=\"_blank\">{item.name}</a></p>\n          <small className=\"repos-lang\">{item.language}</small>\n          <small>Updated on {new Intl.DateTimeFormat('en-GB', { \n                month: 'short', \n                day: '2-digit',\n                year: 'numeric', \n            }).format(new Date(item.updated_at))}</small>\n          </li>\n          ))}\n\n        {/*Search Results with only search language*/}\n        {!this.state.searchType.length>0 && this.state.searchLanguage.length>0 && filteredReposType.map(item=>(\n          <li className=\"search-list\" key={item.id}>\n          <p><a href={item.html_url} target=\"_blank\">{item.name}</a></p>\n          <small className=\"repos-lang\">{item.language}</small>\n          <small>Updated on {new Intl.DateTimeFormat('en-GB', { \n                month: 'short', \n                day: '2-digit',\n                year: 'numeric', \n            }).format(new Date(item.updated_at))}</small>\n          </li>\n          ))}\n\n        {/*Search Results with only search input*/}\n        {!this.state.searchType.length>0 && !this.state.searchLanguage.length>0 && filteredRepos.map(item=>(\n          <li className=\"search-list\" key={item.id}>\n          <p><a href={item.html_url} target=\"_blank\">{item.name}</a></p>\n          <small className=\"repos-lang\">{item.language}</small>\n          <small>Updated on {new Intl.DateTimeFormat('en-GB', { \n                month: 'short', \n                day: '2-digit',\n                year: 'numeric', \n            }).format(new Date(item.updated_at))}</small>\n          </li>\n          ))}\n      </div>\n      </div>\n  </div>\n  );\n  }\n}\n\nexport default App;","import React, { Component } from 'react';\nimport '../styles/leftpane.css'\nimport RightPanel from './rightPanel';\n\nclass LeftPanel extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            profile: null,\n            fullname: null,\n            profile_name: null,\n            profile_image: null,\n            bio: null,\n            company: null,\n            location: null,\n            email: 'Not Listed',\n            public_repos: 0,\n            public_gists: 0,\n            followers: 0,\n            following: 0,\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://api.github.com/users/ganeshbhusi')\n            .then(response => response.json())\n            .then(response => this.setState({\n                profile: response.avatar_url,\n                fullname: response.name,\n                profile_name: response.login,\n                bio: response.bio,\n                company: response.company,\n                location: response.location,\n                public_repos: response.public_repos,\n                public_gists: response.public_gists,\n                followers: response.followers,\n                following: response.following,\n            }))\n            .catch(err => console.error(err))\n    }\n\n    render() {\n        return (\n            <div className=\"maindiv\">\n                <div className=\"leftNav\">\n                    <div className=\"imagediv\">\n                        <img className=\"profile_image\" src={this.state.profile} alt=\"ganesh bhusi\" />\n                    </div>\n                    <div style={{ textAlign: \"left\", marginLeft: 40 }}>\n                        <div className=\"nameSection\">\n                            <br />\n                            <span className=\"main_name\">{this.state.fullname}</span>\n                            <br />\n                            <span className=\"main_id\">{this.state.profile_name}</span>\n                            <br />\n                            <button className=\"buttonFollow\">Follow</button>\n                        </div>\n                        \n                        <div className=\"bioData\">\n                            <p>{this.state.bio}</p>\n                            <p>\n                                <svg className=\"octicon octicon-organization\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\">\n                                    <path style={{ fill: \"gray\" }} fillRule=\"evenodd\" d=\"M16 12.999c0 .439-.45 1-1 1H7.995c-.539 0-.994-.447-.995-.999H1c-.54 0-1-.561-1-1 0-2.634 3-4 3-4s.229-.409 0-1c-.841-.621-1.058-.59-1-3 .058-2.419 1.367-3 2.5-3s2.442.58 2.5 3c.058 2.41-.159 2.379-1 3-.229.59 0 1 0 1s1.549.711 2.42 2.088C9.196 9.369 10 8.999 10 8.999s.229-.409 0-1c-.841-.62-1.058-.59-1-3 .058-2.419 1.367-3 2.5-3s2.437.581 2.495 3c.059 2.41-.158 2.38-1 3-.229.59 0 1 0 1s3.005 1.366 3.005 4z\"></path>\n                                </svg>\n                                {this.state.company}\n                            </p>\n                            <p>\n                                <svg className=\"octicon octicon-location\" viewBox=\"0 0 12 16\" version=\"1.1\" width=\"12\" height=\"16\" aria-hidden=\"true\">\n                                    <path style={{ fill: \"gray\" }} fillRule=\"evenodd\" d=\"M6 0C2.69 0 0 2.5 0 5.5 0 10.02 6 16 6 16s6-5.98 6-10.5C12 2.5 9.31 0 6 0zm0 14.55C4.14 12.52 1 8.44 1 5.5 1 3.02 3.25 1 6 1c1.34 0 2.61.48 3.56 1.36.92.86 1.44 1.97 1.44 3.14 0 2.94-3.14 7.02-5 9.05zM8 5.5c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z\"></path>\n                                </svg>\n                                &nbsp;{this.state.location}\n                            </p>\n                            <p><svg className=\"octicon octicon-mail\" viewBox=\"0 0 14 16\" version=\"1.1\" width=\"14\" height=\"16\" aria-hidden=\"true\">\n                                <path style={{ fill: \"gray\" }} fillRule=\"evenodd\" d=\"M0 4v8c0 .55.45 1 1 1h12c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1H1c-.55 0-1 .45-1 1zm13 0L7 9 1 4h12zM1 5.5l4 3-4 3v-6zM2 12l3.5-3L7 10.5 8.5 9l3.5 3H2zm11-.5l-4-3 4-3v6z\"></path></svg>\n                                {this.state.email}\n                            </p>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"rightNav\">\n                    <div className=\"rightTopMenu\">\n                        {/* <span className=\"menuItems\">Overview</span>\n                        <span className=\"menuItems active\">Repositories <badge>{this.state.public_repos}</badge></span>\n                        <span className=\"menuItems\">Projects <badge>{this.state.public_gists}</badge></span>\n                        <span className=\"menuItems\">Stars <badge>7</badge></span>\n                        <span className=\"menuItems\">Followers <badge>{this.state.followers}</badge></span>\n                        <span className=\"menuItems\">Following <badge>{this.state.following}</badge></span> */}\n\n                        <ul id=\"menu\">\n                            <li>\n                                Overview\n                            </li>\n                            <li className=\"active\" style={{ borderBottomColor: \"#e36209\" }}>\n                                Repositories<span>{this.state.public_repos}</span>\n                            </li>\n                            <li>\n                                Projects<span>{this.state.public_gists}</span>\n                            </li>\n                            <li>\n                                Stars<span>7</span>\n                            </li>\n                            <li>\n                                Followers<span>{this.state.followers}</span>\n                            </li>\n                            <li>\n                                Following<span>{this.state.following}</span>\n                            </li>\n                        </ul>\n                        <hr />\n                    </div>\n\n                    <div>\n                        <RightPanel />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default LeftPanel;\n","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport LeftPanel from './components/leftPanel';\n// import App from './App';\n\nclass App2 extends Component {\n  render() {\n    return (\n      <div>\n          <Header />\n          <div style={{marginTop: \"16px\",width: \"96%\"}}>\n            <LeftPanel />\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default App2;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import Header from './components/Header';\nimport App2 from './App2';\n\n\nReactDOM.render(<App2 />, document.getElementById('root'));\n"],"sourceRoot":""}
